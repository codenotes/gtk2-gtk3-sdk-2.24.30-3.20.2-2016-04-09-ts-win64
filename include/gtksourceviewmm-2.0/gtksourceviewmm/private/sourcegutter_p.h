// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GTKSOURCEVIEWMM_SOURCEGUTTER_P_H
#define _GTKSOURCEVIEWMM_SOURCEGUTTER_P_H


#include <glibmm/private/object_p.h>

#include <glibmm/class.h>

namespace gtksourceview
{

class SourceGutter_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef SourceGutter CppObjectType;
  typedef GtkSourceGutter BaseObjectType;
  typedef GtkSourceGutterClass BaseClassType;
  typedef Glib::Object_Class CppClassParent;
  typedef GObjectClass BaseClassParent;

  friend class SourceGutter;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void cell_activated_callback(GtkSourceGutter* self, GtkCellRenderer* p0, GtkTextIter* p1, GdkEvent* p2);
  static gboolean query_tooltip_callback(GtkSourceGutter* self, GtkCellRenderer* p0, GtkTextIter* p1, GtkTooltip* p2);

  //Callbacks (virtual functions):
};


} // namespace gtksourceview


#endif /* _GTKSOURCEVIEWMM_SOURCEGUTTER_P_H */

